############### Global Log Level(OFF,FATAL,ERROR,WARN,INFO,DEBUG,ALL) #############
log4j.rootLogger=DEBUG,STDOUT,FILELOGER

############### STDOUT Logger ###############
log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
#输出目的Appender的日志级别，Appender的级别设置要优先于logger的
#级别设置，即先使用Appender的，而不管logger的日志级别是怎样设置的
log4j.appender.STDOUT.encoding=GBK
log4j.appender.STDOUT.Threshold=DEBUG
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%d [%c{1}] [%p] %m%n

############### File Logger ###############
#开发时，使用DEBUG，发布时最好修改成INFO，如果未设置级别，则使用父日志记录器的，设置了就使用logger的，不管父日志怎样设置
log4j.logger.com.mypakge=INFO,FILELOGER
#开发时设为true，表示需要屏幕输出，发布时这里最好设置为false，表示不继承父日志记录器的Appender
log4j.additivity.com.mypakge=FALSE
log4j.appender.FILELOGER=org.apache.log4j.RollingFileAppender
#设置日志输出编码方式为UTF-8，如果不指定，会以当前运行操作系统的编码方式记录，这样在有的Linux上会出面乱码
log4j.appender.FILELOGER.encoding=UTF-8
log4j.appender.Priority.Threshold=DEBUG
#${LOGS_PATH}为JVM环境变量，我们可以在运行里给JVM加上该参数 -DLOGS_PATH=e:/tmp/log
log4j.appender.FILELOGER.File=D:/logs/FileTranser.log
log4j.appender.FILELOGER.MaxFileSize=1024KB
log4j.appender.FILELOGER.MaxBackupIndex=10
#文件采用追加方式
log4j.appender.FILELOGER.Append=true
log4j.appender.FILELOGER.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILELOGER.layout.ConversionPattern=[%d{yyy-MM-dd HH:mm:ss.SSS}] [%p] [%t] [%c] [%l] - [%m]%n
log4j.appender.FILELOGER.layout.ConversionPattern=%d [%c{1}] %p %m%n


############### 控制第三方组件的日志输出配置 ###############
log4j.logger.org.quartz=OFF
log4j.logger.com.mchange=OFF